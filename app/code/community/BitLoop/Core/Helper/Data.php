<?php
/**
 * Class BitLoop_Core_Helper_Data
 *
 * @category BitLoop
 * @package  BitLoop_Core
 * @author   Alex Bejan <alex@bitloop.co.uk>
 * @license  Bitloop License <support@bitloop.co.uk>
 */
class BitLoop_Core_Helper_Data extends Mage_Core_Helper_Abstract
{
    /**
     * Subfolder name for the log files generated by the helpers
     * This is relative to the var/log folder in Magento root
     */
    const LOGS_SUBFOLDER = 'bitloop_modules';

    /**
     * Log messages under a specific folder for easy grouping of all Bitloop
     * module logs.
     *
     * @param string $message
     * @param int    $level
     * @param bool   $forceLog
     *
     * @return $this
     * @throws Exception
     */
    public function log($message, $level = null, $forceLog = false)
    {
        // Buld the log folder directory location, relative to Magento's root
        // var/log folder
        $_logFolder =  Mage::getBaseDir('var') . DS . 'log' . DS .
                       self::LOGS_SUBFOLDER;

        // Check if the folder exists and if it doesn't create it.
        // If it exists or it was created successfully, log inside that folder
        // using the module name as the file name
        $_io = new Varien_Io_File();
        if ($_io->checkAndCreateFolder($_logFolder)) {
            // Build the log file name.
            $_logFile = self::LOGS_SUBFOLDER.$this->_getModuleName().'.log';

            // Log the message
            Mage::log($message, $level, $_logFile, $forceLog);
        }

        return $this;
    }
}
